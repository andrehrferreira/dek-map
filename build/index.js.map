{"version":3,"sources":["../src/index.js"],"names":["map","mapPath","mapPathResolve","path","join","process","cwd","then","paths","forEach","filePath","fileRequire","require","resolve","default"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;AAEO,IAAIA;AAAA,uEAAM,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,sCADO,GACUC,eAAKC,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBL,OAAzB,CADV;AAAA;AAAA,+BAGP,sBAAO,CAAIC,cAAJ,YAA8BA,cAA9B,cAAP,EAAgEK,IAAhE,CAAqE,UAACC,KAAD,EAAW;AAClFA,kCAAMC,OAAN,CAAc,UAACC,QAAD,EAAc;AACxB,oCAAIC,cAAcC,QAAQT,eAAKU,OAAL,CAAaH,QAAb,CAAR,CAAlB;;AAEA,oCAAG,OAAOC,WAAP,IAAsB,UAAzB,EACIA,cADJ,KAEK,IAAG,OAAOA,YAAYG,OAAnB,IAA8B,UAAjC,EACDH,YAAYG,OAAZ;AACP,6BAPD;;AASA,mCAAO,IAAP;AACH,yBAXK,CAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA,GAAJ","file":"index.js","sourcesContent":["import path from \"path\";\nimport globby from \"globby\";\n\nexport let map = async (mapPath) => {\n    const mapPathResolve = path.join(process.cwd(), mapPath);\n\n    await globby([`${mapPathResolve}/*.js`, `${mapPathResolve}/**/*.js`]).then((paths) => {\n        paths.forEach((filePath) => {\n            let fileRequire = require(path.resolve(filePath));\n\n            if(typeof fileRequire == \"function\")\n                fileRequire();\n            else if(typeof fileRequire.default == \"function\")\n                fileRequire.default();\n        });\n\n        return true;\n    });\n}\n"]}